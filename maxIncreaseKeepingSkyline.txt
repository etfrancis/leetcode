class Solution {
public:
    int maxIncreaseKeepingSkyline(vector<vector<int>>& grid) {
        vector<vector<int>> gridmaxes(grid.size(), vector<int>(grid[0].size(), 0));
        
        for(int i = 0; i < grid.size(); i++){
            int max = 0;
            for(int j = 0; j < grid[0].size(); j++)
                if(grid[i][j] > max) max = grid[i][j];
            for(int j = 0; j < grid[0].size(); j++)
                gridmaxes[i][j] = max;
        }
        for(int i = 0; i < grid[0].size(); i++){
            int max = 0;
            for(int j = 0; j < grid.size(); j++)
                if(grid[j][i] > max) max = grid[j][i];
            for(int j = 0; j < grid.size(); j++)
                if(gridmaxes[j][i] > max) gridmaxes[j][i] = max;
        }
        int sum = 0;
        for(int i = 0; i < grid.size(); i++)
            for(int j = 0; j < grid[0].size(); j++)
                sum += (gridmaxes[i][j] - grid[i][j]);
    return sum;
    }
};