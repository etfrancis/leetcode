class Solution {
public:
    int findShortestSubArray(vector<int>& nums) {
        unordered_map<int, int> counts;
        unordered_map<int, vector<int>> positions;
        for(int i = 0; i < nums.size(); i++){
            counts[nums[i]]++;
            positions[nums[i]].push_back(i);}
        int max = 0;
        for (auto it : counts) 
            if(it.second > max) max = it.second;
        int shortest = nums.size();
        for (auto it : counts){
            if(it.second == max){
                sort(positions[it.first].begin(), positions[it.first].end());
                int second = positions[it.first][positions[it.first].size() - 1];
                int first = positions[it.first][0];
                int size = second - first + 1;
                if(size < shortest ) shortest = size;
            }
        }
        return shortest;
    }
};