/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* trimBST(TreeNode* root, int L, int R) {
        TreeNode* newTree;
        newTree = checkAdd(root, L, R, newTree);
        return newTree;
    }
    
    TreeNode* checkAdd(TreeNode* node, int L, int R, TreeNode* parent){
        if(node && node->val >= L && node->val <= R){
            parent = new TreeNode(node->val);
            parent->left = checkAdd(node->left, L, R, parent->left);
            parent->right = checkAdd(node->right, L, R, parent->right);}
        else if(node && node->val < L)
            parent = checkAdd(node->right, L, R, parent);
        else if(node && node->val > R)
            parent = checkAdd(node->left, L, R, parent);
        return parent;
    }
};