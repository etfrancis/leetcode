class Solution {
public:
    int longestMountain(vector<int>& A) {
        if(A.size() < 3) return 0;
        
        int ascending = 0;
        if(A[1] > A[0]) ascending = 1;
        if(A[1] == A[0]) ascending = 3;
        
        int peak = 0;
        int count = 1;
        int max = 1;
        
        for(int i = 0; i < A.size() - 1; i++){
            if(ascending){
                if(A[i+1] > A[i]){
                    count++;
                    peak = 0;
                    ascending = 1;
                }
                else if(A[i+1] == A[i]){
                    count = 1;
                    peak = 0;
                    ascending = 3;
                }
                else if(A[i+1] < A[i] && ascending == 1){
                    peak = 1;
                    count++;
                    ascending = 0;
                }
            }
            else{
                if(A[i+1] < A[i] && peak)
                    count++;
                else if(A[i+1] > A[i] && peak){
                    ascending = 1;
                    if(count > max) max = count;
                    count = 2;
                    peak = 0;
                }
                else if(A[i+1] == A[i] && peak){
                    ascending = 3;
                    if(count > max) max = count;
                    count = 1;
                    peak = 0;
                }
                else if(A[i+1] < A[i]){
                    count = 1;
                }
                else if(A[i+1] > A[i]){
                    ascending = 1;
                    count = 2;
                    peak = 0;
                }
                else if(A[i+1] == A[i]){
                    ascending = 3;
                    count = 1;
                    peak = 0;
                }
            }
        }
        if(peak && (count > max)) max = count;
        if(max < 3) return 0;
        return max;
    }
};