/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == NULL || k == 0) return head;
        int length = 0;
        ListNode* p0 = head;
        while(p0){
            p0 = p0->next;
            length++;
        }
        k = k % length;
        int count = k;
        
        ListNode* p1= head;
        while(count){
            if(p1 && p1->next) p1= p1->next;
            else p1 = head;
            count--;
        }
        ListNode* p2= head;
        while(p1 && p1->next){
            p1 = p1->next;
            p2 = p2->next;
        }
        p1->next = head;
        head = p2->next;
        p2->next = NULL;
        return head;
    }
};