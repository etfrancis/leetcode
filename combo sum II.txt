class Solution {
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> solutions;
        vector<int> solution;
        
        sort(candidates.begin(), candidates.end());
        
        for(int i = 0; i < candidates.size(); i++){
            if(candidates[i] <= target)
                addNumber(solutions, solution, candidates, target, 0, candidates[i], i);
            while(i<candidates.size() - 1 && candidates[i] == candidates[i+1]) i++;}
        return solutions;
    }
    
    void addNumber(vector<vector<int>>& solutions, vector<int> solution, vector<int>& candidates, int target, int currentTotal, int newVal, int candidateIndex){
        if(currentTotal + newVal == target){
            solution.push_back(newVal);
            solutions.push_back(solution);
        }
        else if(currentTotal + newVal < target){
            solution.push_back(newVal);
            for(int i = candidateIndex + 1; i < candidates.size(); i++){
                addNumber(solutions, solution, candidates, target, currentTotal + newVal, candidates[i], i);
                while(i<candidates.size() - 1 && candidates[i] == candidates[i+1]) i++;}
        }
        return;
    }
};