class Solution {
public:
    int expressiveWords(string S, vector<string>& words) {
        vector<vector<int>> wordmap;
        int resultcount = 0;
        for(int i = 0; i < S.size(); i++){
            int count = 1;
            while(i < S.size()-1 && S[i] == S[i+1]){
                count++;
                i++;
            }
            wordmap.push_back({S[i], count});
        }
        for(int i = 0; i < words.size(); i++){
            vector<vector<int>> wordmap2;
            for(int j = 0; j < words[i].size(); j++){
                int count = 1;
                while(j < words[i].size()-1 && words[i][j] == words[i][j+1]){
                count++;
                j++;}
            wordmap2.push_back({words[i][j], count});
            }
            int goodresult = 1;
            if(wordmap.size() != wordmap2.size()) goodresult = 0;
            else {
                for(int k = 0; k < wordmap2.size(); k++){
                    if(wordmap[k][0] == wordmap2[k][0] && ((wordmap2[k][1] == wordmap[k][1]) || (wordmap2[k][1] < wordmap[k][1]) && (wordmap[k][1] > 2)))
                       goodresult = 1;
                    else{  
                        goodresult = 0;
                        break;}
                 }
            }
            if(goodresult == 1) resultcount++;
        }
        return resultcount;
    }
};