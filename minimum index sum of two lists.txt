class Solution {
public:
    vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {
        vector<string> result;
        int minsum = list1.size() + list2.size() - 2;
        unordered_map<string, vector<int>> m;
        for(int i = 0; i < list1.size(); i++)
            m[list1[i]].push_back(i);
        for(int i = 0; i < list2.size(); i++)
            m[list2[i]].push_back(i);
        for(auto it:m){
            if(it.second.size() == 2){
                int sum = it.second[0] + it.second[1];
                if(sum < minsum)
                    minsum = sum;
            }
        }
        for(auto it:m){
            if(it.second.size() == 2 && it.second[0] + it.second[1] == minsum)
                result.push_back(it.first);
        }
        return result;
    }
};