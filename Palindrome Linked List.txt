/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(head == NULL || head->next == NULL) return true;
        int count = 0;
        ListNode* counter = head;
        while(counter != NULL){
            count++;
            counter = counter->next;
        }
        int midpoint = count/2;
        ListNode*one = head;
        ListNode*two = head->next;
        ListNode* dummy = new ListNode(-1);
        ListNode*three = dummy;
        ListNode* h2 = NULL;
        
        while(midpoint > 0)
        {
            one->next = three;
            three = one;
            one = two;
            if(two!= NULL)
                two = two->next;
            midpoint--;
        }
        h2 = one;
        ListNode * h1 = three;
        if(count %2 == 1)
            h2 = h2->next;
    
        while(h1 != NULL && h2 != NULL){
            if(h1->val != h2->val) return false;
            h1 = h1->next;
            h2 = h2->next;
        }
    return true;
    }
};